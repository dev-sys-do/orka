syntax = "proto3";

package scheduler.controller;


// ------------------
// Scheduling
// ------------------

message Workload {
    enum Type {
        CONTAINER = 0;
    }

    message Resources {
        optional int32 cpu = 1;
        optional int32 memory = 2;
        optional int32 disk = 3;
    }

    string instance_id = 1;
    Type type = 2;
    string image = 3;
    repeated string environment = 4;
    optional Resources resource_limits = 5;
}

message SchedulingRequest {
    Workload workload = 1;
}

message WorkloadStatus {
    message Status {
        enum StatusCode {
            WAITING = 0;
            RUNNING = 1;
            TERMINATED = 2;
        }

        uint32 code = 1;
        optional string message = 2;
    }

    message Resources {
        int32 cpu = 1;
        int32 memory = 2;
        int32 disk = 3;
    }

    string instance_id = 1;
    Status status = 2;
    Resources resource_usage = 3;
}

message Empty {}

message WorkloadInstance {
    string instance_id = 1;
}

service SchedulingService {
    rpc Schedule(SchedulingRequest) returns (stream WorkloadStatus);
    rpc Stop (WorkloadInstance) returns (Empty);
    rpc Destroy (WorkloadInstance) returns (Empty);
}
