syntax = "proto3";

package node_agent;

message Workload {
    enum Type {
        CONTAINER = 0;
    }

    message Resources {
        optional int32 cpu = 1;
        optional int32 memory = 2;
        optional int32 disk = 3;
    }

    string instance_id = 1;
    Type type = 2;
    string image = 3;
    repeated string environment = 4;
    optional Resources resource_limits = 5;
}

message WorkloadStatus {
    message Status {
        enum StatusCode {
            WAITING = 0;
            RUNNING = 1;
            TERMINATED = 2;
        }

        uint32 code = 1;
        optional string message = 2;
    }

    message Resources {
        int32 cpu = 1;
        int32 memory = 2;
        int32 disk = 3;
    }

    string instance_id = 1;
    Status status = 2;
    Resources resource_usage = 3;
}

message Empty {}

message WorkloadSignal {
    enum Signal {
        STOP = 0;
        KILL = 1;
    }

    string instance_id = 1;
    Signal signal = 2;
}

service WorkloadService {
    rpc Create (Workload) returns (stream WorkloadStatus) {}
    rpc Signal (WorkloadSignal) returns (Empty) {}
}
